$ git stash  暂存本地
$ git pull     拉取

# 下载一个项目和它的整个代码历史
$ git clone [url]

# 显示当前的Git配置
$ git config --list

# 编辑Git配置文件
$ git config -e [--global]

# 设置提交代码时的用户信息
$ git config [--global] user.name "[name]"
$ git config [--global] user.email "[email address]"

# 显示有变更的文件
$ git status
# 添加当前目录的所有文件到暂存区
$ git add .
# 提交暂存区到仓库区
$ git commit -m [message]
# 上传本地指定分支到远程仓库
$ git push [remote] [branch]

# 列出所有本地分支
$ git branch

# 列出所有本地分支和远程分支
$ git branch -a

# 新建一个分支，但依然停留在当前分支
$ git branch [branch-name]

# 新建一个分支，并切换到该分支
$ git checkout -b [branch]

# 切换到指定分支，并更新工作区
$ git checkout [branch-name]

# 删除分支
$ git branch -d [branch-name]


# 显示当前分支的版本历史
$ git log

# 显示暂存区和工作区的代码差异
$ git diff

# 从本地master拉取代码更新当前分支：branch 一般为master
$ git rebase [branch]

# 取回远程仓库的变化，并与本地分支合并
$ git pull [remote] [branch]

